import java.util.Scanner;
/*class HelloWorld {
     double square(double a){
        double area=a*a;
        return area;
    }double rectangle(double a, double b){
        double area=a*b;
        return area;
    }
    double circle(double a){
        double area=3.14*a*a;
        return area;
    }
    double triangle(double a, double b){
        double area=(0.5)*(a*b);
        return area;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        double x=sc.nextDouble();
        double y=sc.nextDouble();
        HelloWorld h=new HelloWorld();
        double area1=h.square(x);
        double area2=h.rectangle(x, y);
        double area3=h.circle(x);
        double area4=h.triangle(x, y);
        System.out.println("Area of square:"+area1);
        System.out.println("Area of rectangle:"+area2);
        System.out.println("Area of circle:"+area3);
        System.out.println("Area of triangle:"+area4);
    }
}*/
/*class HelloWorld {
    String prime(int n){   
        int count=0;
        for(int i=2; i<=n; i++){
            if(n%i==0){
                count++;
            }else{
                
            }
            
        }
         if(count==1){
             return "YES";
            }else{
               return "NO";
       }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        HelloWorld h=new HelloWorld();
        System.out.println(h.prime(x));
}
}*/
/*import java.util.Scanner;
class HelloWorld {
    int fact(int n){
        if(n==0 || n==1){
            return 1;
        }
        return n*fact(n-1);
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        HelloWorld h=new HelloWorld();
        System.out.println(h.fact(x));
    }
}*/
/*double gp(int n){
        if(n==1){
            return 0.5;
        }
        return ((double)1/Math.pow(2,n)+gp(n-1));
    }*/import java.util.Scanner;
class HelloWorld {
    int fibonacci(int n){
        if(n<=1){
            return 1;
        }
        return fibonacci(n-1)+fibonacci(n-2);
    }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        HelloWorld h=new HelloWorld(); 
        for(int i=0; i<=x; i++){
            System.out.print(h.fibonacci(i)+" ");
        }
    }
}
*/// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.Scanner;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int low=1;
        int high=n;
        int mid=0;
        int result=-1;
        while(low <= high){
            mid=(low+high)/2;
            if(mid*mid==n){
                result=mid;
                break;
            }else if(mid*mid<n){
                low=mid+1;
                result=mid;
            }else{
                high=mid-1;
            }
        }
        System.out.println(result);
        
    }
}//search element in a rotated sorted array:
import java.util.Scanner;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]={5, 6, 1, 2, 2, 3, 4};
        int low=0;
        int high=arr.length-1;
        int mid=0;
        int result1=-1;
        while(low <= high){
            mid=(low+high)/2;
            if(arr[mid]==n){
               result1=mid;
               break;
            }else if(arr[mid]>=arr[low]){
                if(arr[low]<=n && n<arr[mid]){
                    high=mid-1;
                }else{
                    low=mid+1;
                }
            }else{
                if(arr[high]>=n && n>arr[mid]){
                    low=mid+1;
                }else{
                    high=mid-1;
                }
            }
        }
        System.out.println(result1);
    }
}
//bubble sort:Time complexity:o(n2)
class HelloWorld {
    public static void main(String[] args) {
        int arr[]={3, 4, 1, 2, 5, 8};
        int temp=0;
        for(int i=0; i<arr.length; i++){
            for(int j=0; j<arr.length-i-1; j++){
                if(arr[j]>arr[j+1]){
                    temp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
        }
        for(int i:arr){
            System.out.print(i+" ");
        }
        
    }
}//selection sort:Time complexity:o(n2)
class HelloWorld {
    public static void main(String[] args) {
        int arr[]={3, 4, 1, 2, 5, 8};
        int temp=0;
        for(int i=0; i<arr.length-1; i++){
            int min_idx=i;
            for(int j=i+1; j<arr.length; j++){
                if(arr[min_idx]>arr[j]){
                    min_idx=j;
                }
            }
            temp=arr[i];
            arr[i]=arr[min_idx];
            arr[min_idx]=temp;
        }
        for(int i:arr){
            System.out.print(i+" ");
        }
        
    }
}//insertion sort
class HelloWorld {
    public static void main(String[] args) {
        int arr[]={3, 4, 1, 2, 5, 8};
        for(int i=1; i<arr.length; i++){
            int key=arr[i];
            int j=i-1;
            while(j>=0 && arr[j]>key){
                arr[j+1]=arr[j];
                j--;
            }
            arr[j+1]=key;
        }
        for(int i:arr){
            System.out.print(i+" ");
        }
        
    }
}//Time complexity:o(n)
//merge 2 sorted arrays
class HelloWorld {
    public static void main(String[] args) {
        int arr1[]={1 ,2 ,3, 4, 5};
        int arr2[]={2, 6, 7, 8, 9};
        int arr3[]=new int[arr1.length+arr2.length];
        int i=0, j=0, k=0;
        while(i<arr1.length && j< arr2.length){
            if(arr1[i]<arr2[j]){
                arr3[k]=arr1[i];
                i++;
              
            }else {
                arr3[k]=arr2[j];
                j++;
               
            }
            k++;
        }
            while(i<arr1.length){
                arr3[k]=arr1[i];
                i++;
                k++;
            }
            while(j<arr2.length){
                arr3[k]=arr2[j];
                j++;
                k++;
            }
        for(int x:arr3){
            System.out.print(x+" ");
        }
        
    }
}